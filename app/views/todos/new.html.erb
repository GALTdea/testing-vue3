
<app></app>
<div class="container" >
  

<div>Todos</div>
<%= content_tag :div,
  id: "todo-form",
  data: {
  	id: @todo.id,
  	todo: @todo.to_json(exept:[:created_at, :updated_at]),
  	todo_items_attributes: @todo.todo_items.to_json(exept: [:todo_id,:created_at, :updated_at]),
  } do %>
<label>Todo Today</label>
  <!-- v-model="todo.title" connects input to vue data, will look for the todo propierty in vue and inside of the todo propierty it'll look for the title propierty. it'll alter the state of the vue when edditing it'll update vue and kip in sink. basically data binding of angular -->
  <input type="text" v-model="todo.title" />

  <h4>Items</h4>
  <div v-for="(todo_item, index) in todo.todo_items_attributes" >
    <label>Item</label>
    <!-- v-model recognizes the givven iteration of todo_item  -->
    <input type="text" v-model="todo_item.description">
  </div>
  

 <button v-on:click="addItem" >Add item</button>
  
<% end %>



<!-- <button v-on:click="saveTeam">Save Team</button> -->

<!-- <h4>Players</h4>
  <div v-for="(item, index) in todo">
    <div v-if="todo._destroy == '1'">
      {{ todo.title }} will be removed. 
    </div>
    <div v-else>
      <label>item</label>
      <input type="text" v-model="todo.title" />
     <button v-on:click="removePlayer(index)">Remove</button> -->
    <!-- </div> -->

    <!-- <hr /> -->
  <!-- </div> -->

  <!-- <button v-on:click="addPlayer">Add Player</button> -->

  <!-- <br /> --> 



  </div>
